{"version":3,"sources":["modules/Header.js","components/Addshare.js","utils/formula.js","modules/Main.js","modules/Footer.js","components/Settings.js","App.js","index.js"],"names":["Header","handleModal","e","preventDefault","props","className","id","Navbar","bg","Container","Brand","href","Toggle","aria-controls","Collapse","Nav","Item","Button","variant","type","size","onClick","this","icon","faCog","React","Component","Addshare","state","share","value","qty","errors","message","handleSelect","setState","target","handleValue","handleQty","handleAddShare","document","getElementById","focus","Form","onSubmit","Row","Col","xs","Group","faPlusCircle","controlId","Label","Control","as","onChange","placeholder","round","decimals","Number","Math","totIntraBrokerage","numShares","shareValue","shareState","stampDuty","shareTransChr","shareSTT","GST","turnover","zerodhaBrokarage","genBrokarage","totBrokerage","toFixed","Main","shares","length","reduce","acc","i","data","states","settings","code","Table","bordered","responsive","map","key","toUpperCase","colSpan","style","fontSize","Footer","Date","getFullYear","Settings","accType","tradeType","isModalActive","show","saveStatus","handleAcc","handleTrade","handleSubmit","setTimeout","handleSettings","Modal","onHide","centered","closeButton","Title","Body","custom","Object","values","name","accTypes","Check","slug","label","checked","tradingTypes","tradingType","App","modalState","obj","bool","prevState","concat","Fragment","ReactDOM","render"],"mappings":"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","file":"static/js/main.b9fc365c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\r\nimport { Navbar, Nav, Container, Button } from 'react-bootstrap';\r\n\r\nclass Header extends React.Component {\r\n    handleModal = (e) => {\r\n        e.preventDefault();\r\n        this.props.handleModal(true);\r\n    };\r\n    render() {\r\n        return (\r\n            <header className=\"header\" id=\"header\">\r\n                <Navbar bg=\"light\">\r\n                    <Container>\r\n                        <Navbar.Brand href=\"/\">\r\n                            The Reckon\r\n                        </Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"ml-auto align-items-center\">\r\n                                <Nav.Item className=\"pr-2\">Intraday brokerage Calculator</Nav.Item>\r\n                                <Nav.Item>\r\n                                    <Button variant=\"dark\" type=\"submit\" size=\"sm\" onClick={this.handleModal}>\r\n                                        <FontAwesomeIcon icon={faCog}> Settings</FontAwesomeIcon>\r\n                                    </Button>\r\n                                </Nav.Item>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </header>\r\n        );\r\n    };\r\n};\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\n\r\nclass Addshare extends Component {\r\n    state = {\r\n        share: {\r\n            state: 'buy',\r\n            value: 0,\r\n            qty: 0\r\n        },\r\n        errors: {\r\n            value: {\r\n                state: false,\r\n                message: 'Share value needs to be greater than 0.'\r\n            },\r\n            qty: {\r\n                state: false,\r\n                message: 'Share quantity needs to be greater than 0.'\r\n            },\r\n        }\r\n    };\r\n    handleSelect = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            share: {\r\n                ...this.state.share,\r\n                state: e.target.value\r\n            }\r\n        });\r\n    };\r\n    handleValue = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            share: {\r\n                ...this.state.share,\r\n                value: e.target.value\r\n            }\r\n        });\r\n    };\r\n    handleQty = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            share: {\r\n                ...this.state.share,\r\n                qty: e.target.value\r\n            }\r\n        });\r\n    };\r\n    handleAddShare = (e) => {\r\n        e.preventDefault();\r\n        if ( this.state.share.qty === 0 || this.state.share.value === 0 ) {\r\n            this.setState({\r\n                share: {\r\n                    ...this.state.share\r\n                },\r\n                errors: {\r\n                    value: {\r\n                        ...this.state.errors.value,\r\n                        state: this.state.share.value === 0 && true\r\n                    },\r\n                    qty: {\r\n                        ...this.state.errors.qty,\r\n                        state: this.state.share.qty === 0 && true\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            this.props.handleAddShare(this.state.share);\r\n            this.setState({\r\n                share: {\r\n                    state: 'buy',\r\n                    value: 0,\r\n                    qty: 0\r\n                },\r\n                errors: {\r\n                    value: {\r\n                        ...this.state.errors.value,\r\n                        state: false\r\n                    },\r\n                    qty: {\r\n                        ...this.state.errors.qty,\r\n                        state: false\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        document.getElementById('share-state').focus();\r\n    };\r\n    render() {\r\n        return (\r\n            <Form className=\"p-3 bg-light rounded\" onSubmit={this.handleAddShare}>\r\n                <Row className=\"px-3\">\r\n                {this.state.errors.value.state && (\r\n                    <Col xs={12} className=\"alert alert-danger\">{this.state.errors.value.message}</Col>\r\n                )}\r\n                {this.state.errors.qty.state && (\r\n                    <Col xs={12} className=\"alert alert-danger\">{this.state.errors.qty.message}</Col>\r\n                )}\r\n                </Row>\r\n                <Row className=\"align-items-end\">\r\n                    <Col xs=\"auto\">\r\n                        <Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\" size=\"lg\">\r\n                                <FontAwesomeIcon icon={faPlusCircle}></FontAwesomeIcon>\r\n                            </Button>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"share-state\">\r\n                            <Form.Label>State</Form.Label>\r\n                            <Form.Control as=\"select\" size=\"lg\" value={this.state.share.state} onChange={this.handleSelect}>\r\n                                <option value=\"buy\">Buy</option>\r\n                                <option value=\"sell\">Sell</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"share-value\">\r\n                            <Form.Label>Value({'\\u20B9'})</Form.Label>\r\n                            <Form.Control size=\"lg\" type=\"number\" placeholder=\"Value\" value={this.state.share.value||''} onChange={this.handleValue} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"share-qty\">\r\n                            <Form.Label>Quantity</Form.Label>\r\n                            <Form.Control size=\"lg\" type=\"number\" placeholder=\"Qty\" value={this.state.share.qty||''} onChange={this.handleQty} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        );\r\n    }\r\n};\r\nexport default Addshare;","function round(value, decimals) {\r\n    return Number(Math.round(value+'e'+decimals)+'e-'+decimals);\r\n};\r\nconst totIntraBrokerage = (numShares, shareValue, shareState, stampDuty, shareTransChr = 0.0000325, shareSTT = 0.00025, GST = 1.18) => {\r\n    let turnover = Number(numShares)*Number(shareValue);\r\n    let zerodhaBrokarage = (turnover*3)/10000;\r\n    let genBrokarage = round((turnover*stampDuty) + ((turnover*shareTransChr)*GST) + (turnover*0.0000005), 3);\r\n    let totBrokerage = 0;\r\n    if (shareState === 'sell') {\r\n        if (zerodhaBrokarage > 20) {\r\n            totBrokerage = 23.6 + genBrokarage + (turnover*shareSTT);\r\n        } else {\r\n            totBrokerage = (zerodhaBrokarage*GST) + genBrokarage + (turnover*shareSTT);\r\n        }\r\n    } else {\r\n        if (zerodhaBrokarage > 20) {\r\n            totBrokerage = 23.6 + genBrokarage;\r\n        }\r\n        else {\r\n            totBrokerage = (zerodhaBrokarage*GST) + genBrokarage;\r\n        }\r\n    };\r\n    return Number(totBrokerage.toFixed(2));\r\n};\r\nexport default totIntraBrokerage;","import React from 'react';\r\nimport Addshare from '../components/Addshare';\r\nimport totIntraBrokerage from '../utils/formula';\r\nimport data from '../utils/_DATA.json';\r\nimport { Row, Col, Container, Table } from 'react-bootstrap';\r\n\r\nconst Main = (props) => {\r\n        let totBrokerage = props.shares.length !== 0 ? props.shares.reduce((acc, share, i) => {\r\n            return acc = acc + totIntraBrokerage(share.qty, share.value, share.state, data.states[props.settings.code].stampDuty);\r\n        }, 15.95) : 0;\r\n        return (\r\n            <main className=\"main\" id=\"main\">\r\n                <section className=\"section\">\r\n                    <Container>\r\n                        <Table bordered responsive=\"sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>State</th>\r\n                                    <th>Value({'\\u20B9'})</th>\r\n                                    <th>Quantity</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {props.shares.map((share, i) => {\r\n                                    return (\r\n                                        <tr key={i++} className={share.state === 'buy' ? 'table-info text-info' : 'table-success text-success'}>\r\n                                            <td>{i++}</td>\r\n                                            <td>{share.state.toUpperCase()}</td>\r\n                                            <td>{share.value}</td>\r\n                                            <td>{share.qty}</td>\r\n                                        </tr>\r\n                                    );\r\n                                })}\r\n                                <tr>\r\n                                    <td colSpan=\"4\">\r\n                                        <Addshare handleAddShare={props.handleAddShare} />\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"border-top border-gray py-3 text-right\">\r\n                                    <h2 style={{fontSize: '30px'}}>Total Brokerage: {totBrokerage}</h2>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </section>\r\n            </main>\r\n        );\r\n};\r\nexport default Main;","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer py-3 border-top border-light\" id=\"footer\">\r\n            <Container>\r\n                <Row>\r\n                    <Col xs>\r\n                        <div className=\"copyright text-center\">\r\n                            &copy; <span>{new Date().getFullYear()}</span>, All rights reserved.\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    );\r\n};\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Button, Modal, Form } from 'react-bootstrap';\r\nimport data from '../utils/_DATA.json';\r\n\r\nexport default class Settings extends Component {\r\n    state = {\r\n        code: 'DL',\r\n        accType: 'zerodha',\r\n        tradeType: 'interaday',\r\n        isModalActive: this.props.show,\r\n        saveStatus: 'Save'\r\n    };\r\n    componentDidMount() {\r\n        this.props.handleSettings(this.state);\r\n    }\r\n    static getDerivedStateFromProps(props, state){\r\n        if ( state.isModalActive !== props.show ) {\r\n            return {\r\n                ...state,\r\n                saveStatus: 'Save',\r\n                isModalActive: props.show\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n    handleSelect = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            code: e.target.value\r\n        });\r\n    };\r\n    handleAcc = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            accType: e.target.value\r\n        });\r\n    };\r\n    handleTrade = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            tradeType: e.target.value\r\n        });\r\n    };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            ...this.state,\r\n            saveStatus: 'Saving'\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                saveStatus: 'Saved'\r\n            });\r\n        }, 1000);\r\n        this.props.handleSettings(this.state);        \r\n    };\r\n    handleModal = () => {\r\n        this.props.handleModal(false);\r\n    };\r\n    render() {\r\n        return (\r\n            <Modal show={this.state.isModalActive} onHide={this.handleModal} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Settings</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId=\"broker-state\">\r\n                            <Form.Label>State</Form.Label>\r\n                            <Form.Control as=\"select\" value={this.state.code} onChange={this.handleSelect} custom>\r\n                                {Object.values(data.states).map(state => {\r\n                                    return (\r\n                                        <option key={state.name} value={state.code}>{state.name}</option>\r\n                                    );\r\n                                })}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Account Type</Form.Label>\r\n                            {data.accTypes.map((accType, i) => {\r\n                                return (\r\n                                    <Form.Check key={i} custom type=\"radio\" id={`broker-${accType.slug}-acc`} label={accType.name} name=\"broker-acc-type\" value={accType.slug} onChange={this.handleAcc} checked={this.state.accType === accType.slug} />\r\n                                );\r\n                            })}\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"broker-trading-type\">\r\n                            <Form.Label>Trading Type</Form.Label>\r\n                            {data.tradingTypes.map((tradingType, i) => {\r\n                                return (\r\n                                    <Form.Check key={i} custom type=\"radio\" id={`broker-${tradingType.slug}-trading`} label={tradingType.name} name=\"broker-trading-type\" onChange={this.handleTrade} value={tradingType.slug}  checked={this.state.tradeType === tradingType.slug} />\r\n                                );\r\n                            })}\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button type=\"button\" variant=\"secondary\" size=\"lg\" onClick={this.handleModal}>Close</Button>\r\n                        <Button type=\"button\" variant=\"primary\" size=\"lg\" onClick={this.handleSubmit}>{this.state.saveStatus}</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport Header from './modules/Header';\nimport Main from './modules/Main';\nimport Footer from './modules/Footer';\nimport Settings from './components/Settings';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends React.Component {\n    state = {\n        modalState: false,\n        settings: {},\n        shares: []\n    };\n    handleSettings = (obj) => {\n        this.setState({\n            ...this.state,\n            settings: obj\n        });\n    };\n    handleModal = (bool) => {\n        this.setState(prevState => ({\n            ...prevState,\n            modalState: bool\n        }));\n    };\n    handleAddShare = (obj) => {\n        this.setState({\n            ...this.state,\n            shares: this.state.shares.concat(obj)\n        });\n    };\n    render() {\n        return (\n            <React.Fragment>\n                <Header handleModal={this.handleModal} />\n                <Main shares={this.state.shares} settings={this.state.settings} handleAddShare={this.handleAddShare} />\n                <Footer />\n                <Settings show={this.state.modalState} handleModal={this.handleModal} handleSettings={this.handleSettings} />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('wrapper')\n);\n"],"sourceRoot":""}